# 服务配置
kind: Service
apiVersion: v1
metadata:
  name: $APP_NAME
  namespace: $APP_NAME_SPACE
  labels:
    app: $APP_NAME
spec:
  ports:
    - name: http
      protocol: TCP
      # 容器内部端口，服务端口
      targetPort: 80
      # pod 端口，容器外部端口，可以重复（每个pod都有一个独立的ip）
      port: 80
  selector:
    app: $APP_NAME
  type: NodePort
  sessionAffinity: None


# 部署配置
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: $APP_NAME
  namespace: $APP_NAME_SPACE
  labels:
    app: $APP_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $APP_NAME
  template:
    metadata:
      labels:
        app: $APP_NAME
    spec:
      containers:
        - name: $APP_NAME
          image: $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$APP_NAME:$APP_VERSION
          ports:
            - containerPort: 80
              protocol: TCP
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          # 拉取镜像策略，当本地不存在时拉取。
          imagePullPolicy: Always
      # 容器自动自动（Always：当容器失效时，由kubelet自动重启该容器。OnFailure：当容器终止运行且退出码不为0时，由kubelet自动重启该容器。Never：不论容器运行状态如何，kubelet都不会重启该容器。）
      restartPolicy: Always
      # 优雅停机毫秒
      terminationGracePeriodSeconds: 30
  # 发布策略（滚动更新）
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%